{
  "test_suite_name": "fixed_issues",
  "tag": "smoke",

  "test_suite_config":{
    "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample"],"cluster": ["view", "cluster_table_bug"]}}
  },
  "comments": "Tests covering fixed issues smoke cases.",
  "tests": [
    {
      "id": 0,
      "tags": ["materialized view"],
      "name": "#1288",
      "description": "create materialized view over materialized view with last emit",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_type": "table", "wait":2, "query":"drop view if exists mv_2"},
            {"client":"python", "query_type": "table", "wait":2, "query":"drop view if exists mv_1"},
            {"client":"python", "query_type": "table", "wait":2, "query":"drop view if exists mv_truck_track"},
            {"client":"python", "query_type": "table", "wait":2, "query":"drop stream if exists ttp_truck_track"},
            {"client":"python", "query_type": "table", "wait":2, "query_id":"9900", "query": "create stream ttp_truck_track(`lpn` string, `vno` string, `drc` string, `drcCode` int32, `wgs84Lat` float32, `wgs84Lon` float32, `gcj02Lat` float32, `gcj02Lon` float32, `province` nullable(string), `city` nullable(string), `country` nullable(string), `spd` float32, `mil` float32, `time` string, `adr` string)"},
            {"client":"python", "query_type": "table", "wait":5, "query_id":"9901", "query": "create materialized view default.mv_truck_track as (select * from default.ttp_truck_track where date_diff('second', _tp_time, now()) < 30)"},
            {"client":"python", "query_type": "table", "wait":5, "query_id":"9902", "query": "create materialized view if not exists mv_1 as (select now() as time, count_distinct(lpn) as cnt from mv_truck_track emit last 10m and periodic 10s)"},
            {"client":"python", "query_type": "table", "wait":5, "query_id":"9903", "query": "create materialized view if not exists mv_2 as (select now() as time, count_distinct(lpn) as cnt from default.mv_truck_track emit last 10m and periodic 10s)"}
          ]
        }
      ],
      "expected_results": [
        {"query_id":"9900", "expected_results":[]},
        {"query_id":"9901", "expected_results":[]},
        {"query_id":"9902", "expected_results":[]},
        {"query_id":"9903", "expected_results":[]}
      ]
    },
    {
      "id": 1,
      "tags": ["substream"],
      "name": "#1295",
      "description": "substream watermark and garbage collection",
      "steps":[
        {
          "statements": [
            {"client":"python", "query_type": "table", "wait":2, "query":"drop view if exists test_substream_1"},
            {"client":"python", "query_type": "table", "wait":2, "query":"create stream test_substream_1(i int, s string)"},
            {"client":"python", "query_id":"9900", "terminate": "manual", "query_type": "stream", "depends_on_stream":"test_substream_1", "query":"select s, count(*), max(i) from tumble(test_substream_1, 2s) partition by s group by window_start, s"},
            {"client":"python", "query_type": "table", "depends_on": 9900, "wait":3, "query": "insert into test_substream_1(i, s) values (1, 'a'), (2, 'b')"},
            {"client":"python", "query_type": "table", "wait":3, "query": "insert into test_substream_1(i, s) values (1, 'a'), (2, 'b')"},
            {"client":"python", "query_type": "table", "wait":3, "query": "insert into test_substream_1(i, s) values (1, 'a'), (2, 'b')"},
            {"client":"python", "wait": 2, "run_mode":"table", "query_type": "table", "query":"kill query where query_id = '9900'"}
          ]
        }
      ],
      "expected_results": [
        {"query_id":"9900", "expected_results":[
          ["a", 1, 1],
          ["b", 1, 2],
          ["a", 1, 1],
          ["b", 1, 2]
        ]}
      ]
    }
  ]
}
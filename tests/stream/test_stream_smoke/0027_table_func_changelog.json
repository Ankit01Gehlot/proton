{
    "test_suite_name": "table_func_changelog",
    "tag": "smoke",
    "test_suite_config":{
        "setup": {
            "statements": [
            ]
        },
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":{"default":["todo", "to_support", "change", "bug", "sample", "native_not_support"],"cluster": ["view", "cluster_table_bug"]}}
    },
    "comments": "Tests covering query table function changelog",
    "tests": [
        {
            "id": 0,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_append-only",
            "description": "tail query from table function changelog(stream)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2800", "wait":1, "query": "select i, k, _tp_delta from changelog(test28_left_stream, i);"},
                        {"client":"python", "query_type": "table", "depends_on":"2800", "wait":1, "query": "insert into test28_left_stream(i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2800", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream(i, k) values (1, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2800",
                    "expected_results":[
                        [1, "k1", 1], 
                        [1, "k1", -1], 
                        [1, "k2", 1]
                    ]
                }
            ]
        },
        {
            "id": 1,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_versioned_kv",
            "description": "tail query from table function changelog(versioned_kv)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_version_kv_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_version_kv_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_version_kv_stream(i int, k string) primary key k settings mode='versioned_kv';"},
                        {"client":"python", "query_type": "stream", "query_id":"2801", "wait":1, "query": "select i, k, _tp_delta from changelog(test28_version_kv_stream, true);"},
                        {"client":"python", "query_type": "table", "depends_on":"2801", "wait":1, "query": "insert into test28_version_kv_stream(i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2801", "kill_wait":3, "wait":1, "query": "insert into test28_version_kv_stream(i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2801",
                    "expected_results":[
                        [1, "k1", 1], 
                        [1, "k1", -1], 
                        [2, "k1", 1]
                    ]
                }
            ]
        },
        {
            "id": 2,
            "tags": ["table_func_changelog"],
            "name": "table_func_changelog_subquery",
            "description": "tail query from table function changelog(subquery)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2802", "wait":1, "query": "with cte as (select i, k from test28_left_stream) select i, k, _tp_delta from changelog(cte, k);"},
                        {"client":"python", "query_type": "table", "depends_on":"2802", "wait":1, "query": "insert into test28_left_stream(i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2802", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream(i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2802",
                    "expected_results":[
                        [1, "k1", 1], 
                        [1, "k1", -1], 
                        [2, "k1", 1]
                    ]
                }
            ]
        },
        {
            "id": 3,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "changelog(t1)_inner_all_join_changelog(t2)",
            "description": "changelog(t1) inner all join changelog(t2)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2803", "wait":1, "query": "select i, k, j, kk, _tp_delta from changelog(test28_left_stream, k) as a inner join changelog(test28_right_stream, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2803", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2803", "kill_wait":3, "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2803",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1], 
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 4,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "append-only_inner_all_join_changelog(t2)",
            "description": "append-only inner all join changelog(t2)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2804", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a inner join changelog(test28_right_stream, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2804", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table",  "kill":"2804", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2804",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1], 
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 5,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "append-only_inner_all_join_changelog(vk)",
            "description": "append-only inner all join changelog(vk)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_version_kv_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_version_kv_stream(j int, kk string) primary key kk settings mode='versioned_kv';"},
                        {"client":"python", "query_type": "stream", "query_id":"2805", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a inner join changelog(test28_version_kv_stream, true) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2805", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table",  "kill":"2805", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2805",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1],
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 6,
            "tags": ["table_func_changelog", "inner-join"],
            "name": "append-only_inner_all_join_changelog(subquery)",
            "description": "append-only inner all join changelog(subquery)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2806", "wait":1, "query": "with cte as (select j, kk from test28_right_stream) select i, k, j, kk, _tp_delta from test28_left_stream as a inner join changelog(cte, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2806", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table",  "kill":"2806", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2806",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1],
                        [2, "k1", 2, "kk1", 1]
                    ]
                }
            ]
        },
        {
            "id": 7,
            "tags": ["table_func_changelog", "left-join"],
            "name": "append-only_left_all_join_changelog(t2)",
            "description": "append-only left all join changelog(t2)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2807", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a left join changelog(test28_right_stream, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2807", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2807", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (3, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2807",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1], 
                        [2, "k1", 2, "kk1", 1],
                        [3, "k2", 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 8,
            "tags": ["table_func_changelog", "left-join"],
            "name": "append-only_left_all_join_changelog(vk)",
            "description": "append-only left all join changelog(vk)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_version_kv_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_version_kv_stream(j int, kk string) primary key kk settings mode='versioned_kv';"},
                        {"client":"python", "query_type": "stream", "query_id":"2808", "wait":1, "query": "select i, k, j, kk, _tp_delta from test28_left_stream as a left join changelog(test28_version_kv_stream, true) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2808", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_version_kv_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2808", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (3, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2808",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1],
                        [2, "k1", 2, "kk1", 1],
                        [3, "k2", 0, "", 0]
                    ]
                }
            ]
        },
        {
            "id": 9,
            "tags": ["table_func_changelog", "left-join"],
            "name": "append-only_left_all_join_changelog(subquery)",
            "description": "append-only left all join changelog(subquery)",
            "steps":[
                {
                    "statements": [
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_left_stream;"},
                        {"client":"python", "query_type": "table", "query":"drop stream if exists test28_right_stream;"},
                        {"client":"python", "query_type": "table", "exist":"test28_left_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_left_stream (i int, k string);"},
                        {"client":"python", "query_type": "table", "exist":"test28_right_stream", "exist_wait":2, "wait":1, "query":"create stream if not exists test28_right_stream (j int, kk string);"},
                        {"client":"python", "query_type": "stream", "query_id":"2809", "wait":1, "query": "with cte as (select j, kk from test28_right_stream) select i, k, j, kk, _tp_delta from test28_left_stream as a left join changelog(cte, kk) as b on a.i == b.j;"},
                        {"client":"python", "query_type": "table", "depends_on":"2809", "wait":1, "query": "insert into test28_right_stream (j, kk) values (1, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (1, 'k1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_right_stream (j, kk) values (2, 'kk1');"},
                        {"client":"python", "query_type": "table", "wait":1, "query": "insert into test28_left_stream (i, k) values (2, 'k1');"},
                        {"client":"python", "query_type": "table",  "kill":"2809", "kill_wait":3, "wait":1, "query": "insert into test28_left_stream (i, k) values (3, 'k2');"}
                    ]
                }
            ],
            "expected_results": [
                {
                    "query_id":"2809",
                    "expected_results":[
                        [1, "k1", 1, "kk1", 1], 
                        [1, "k1", 1, "kk1", -1],
                        [2, "k1", 2, "kk1", 1],
                        [3, "k2", 0, "", 0]
                    ]
                }
            ]
        }
    ]
}

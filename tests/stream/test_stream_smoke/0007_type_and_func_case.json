{
    "test_suite_name": "type_and_func",
    "test_suite_config":{
        "tests_2_run": {"ids_2_run": ["all"], "tags_2_run":[], "tags_2_skip":["todo", "to_support", "change", "bug", "sample"]}
    },
    "commments":
        "Tests covering the steam query smoke cases.",
    "tests": [

        {
            "id": 0,
            "tags": ["type"],
            "name": "default type in one table and injest",
            "description": "create a table test_type, 1 column for 1 type and ingest data with same or different column sequence of show create",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists test_type"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream test_type (uuid uuid, int int, uint uint8, string string, float float, decimal decimal32(3), date date, datetime datetime, enum enum('a'=1, 'b'=2, 'z'=26), tuple tuple(s string, i int), ipv4 ipv4, ipv6 ipv6, map map(string, int), nullable nullable(datetime64), timestamp datetime64(3) default now64(3))"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into test_type (uuid, int, uint, string, float, decimal, date, datetime, enum, tuple, ipv4, ipv6, map, nullable, timestamp) values ('4c6a2a19-4f9f-456f-b076-c43ef97255a7', -1234567, 1234567, '{@string}', 12345.123, 123456.123, to_date('2022-03-24'), to_datetime('2022-03-24 17:17:17'), 'a', ('a', 0), '192.168.168.168', '2a02:aa08:e000:3100::20', {'key1':111}, null ,'2020-01-01 11:11:11')"},
                    {"client":"python","query_id":"801", "query_end_timer":2, "query_type": "stream", "query":"select uuid, int, uint, string, float, decimal, date, datetime, enum, tuple, ipv4, ipv6, map, nullable from test_type settings seek_to = 'earliest'"}
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["4c6a2a19-4f9f-456f-b076-c43ef97255a7", -1234567, 135, "{@string}", 12345.123, "123456.123", "2022-03-24", "2022-03-24 17:17:17", "a", "('a', 0)", "192.168.168.168", "2a02:aa08:e000:3100::20", "{'key1': 111}", "None"]]}
            ]
        },
        {
            "id": 1,
            "tags": ["type"],
            "name": "uint",
            "description": "create a table t_unit with uint type and ingest, query",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_uint"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"create stream t_uint (uint uint)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_uint (uint) values (123456)"},
                    {"client":"python","query_id":"801", "query_end_timer":2, "query_type": "stream", "query":"select  uint from t_uint settings seek_to = 'earliest'"}
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                [123456]]}
            ]
        },
        {
            "id": 2,
            "tags": ["type", "bug"],
            "name": "decimal",
            "description": "create a table t_decimal with decimal type and ingest, query",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_decimal"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"create stream t_decimal (decimal decimal(3))"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_uint (decimal) values (1234.123)"},
                    {"client":"python","query_id":"801", "query_end_timer":2, "query_type": "stream", "query":"select decimal from t_decimal settings seek_to = 'earliest'"}
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["1234.123"]]}
            ]
        },
        {
            "id": 3,
            "tags": ["type"],
            "name": "bool",
            "description": "create a table t_bool with bool type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_bool"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_bool (bool bool)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_bool (bool) values (true)"},
                    {"client":"python","query_id":"801", "query_end_timer":2, "query_type": "stream", "query":"select bool from t_bool settings seek_to = 'earliest'"}
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["True"]]}
            ]
        },
        {
            "id": 4,
            "tags": ["type"],
            "name": "fixed_string",
            "description": "create a table t_fixeds with fixed_string type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_fixeds"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_fixeds (fixeds fixed_string(32))"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_fixeds (fixeds) values ('{@fixed_string32}')"},
                    {"client":"python","query_id":"801", "query_end_timer":2, "query_type": "stream", "query":"select fixeds from t_fixeds settings seek_to = 'earliest'"}
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["{@fixed_string32}"]]}
            ]
        },
        {
            "id": 5,
            "tags": ["type", "bug"],
            "name": "low_cardinality",
            "description": "create a table t_lowcard with low_cardinality type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_lowcard"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_lowcard (lowcard low_cardinality(string))"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_lowcard (lowcard) values ('{@lowcardinalitystring}')"},
                    {"client":"python","query_id":"801", "query_end_timer":2, "query_type": "stream", "query":"select lowcard from t_lowcard settings seek_to = 'earliest'"}
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["{@lowcardinalitystring}"]]}
            ]
        },
        {
            "id": 6,
            "tags": ["func"],
            "name": "latest()",
            "description": "create a table t_lowcard with low_cardinality type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_latest"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_latest (name string, price int)"},
                    {"client":"python","query_id":"801", "query_end_timer":3, "query_type": "stream", "query":"select group_array(name) as names,group_array(latest_price) as prices,map_cast(names, prices) as name_prices, (name_prices['id1']/2 + name_prices['id2']/2) as comb_price from (select name,latest(price) as latest_price from t_latest group by name emit periodic 5s)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_latest (name, price) values ('id1', 100) ('id2', 200)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_latest (name, price) values ('id1', 500) ('id2', 300)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_latest (name, price) values ('id1', 300) ('id2', 1000)"}                    

                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["['id2', 'id1']", "[1000, 300]", "{'id2': 1000, 'id1': 300}", "650"]]}
            ]
        },
        {
            "id": 7,
            "tags": ["func"],
            "name": "to_float on filed out of map",
            "description": "create a table t_float_map with low_cardinality type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_float_map"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_float_map (id string, value_str string)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_float_map (id, value_str) values ('a', '100.1')"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_float_map (id, value_str) values ('b', '200.1')"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"insert into t_float_map (id, value_str) values ('c', '300.1')"},
                    {"client":"python","query_id":"801", "query_type": "table", "wait":2, "query":" select group_array(id) as ids, group_array(latest_value_str) as latest_value_strs, map_cast(ids, latest_value_strs) as id_value_strs, id_value_strs['a'] as id_value_a, to_float(id_value_a) from (select id, latest(value_str) as latest_value_str from table(t_float_map) group by id)"}                                       

                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["['b', 'c', 'a']", "['200.1', '300.1', '100.1']", "{'b': '200.1', 'c': '300.1', 'a': '100.1'}", "100.1", 100.1]]}
            ]
        },
        {
            "id": 8,
            "tags": ["func"],
            "name": "to_float on filed out of map with emit version",
            "description": "create a table t_float_map with low_cardinality type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop view if exists float_map_view"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"drop stream if exists t_float_map"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_float_map (id string, value_str string)"},
                    {"client":"python", "query_type": "stream", "query_id": "801","wait":1, "query_end_timer": 8, "query":"select emit_version(), group_array(id) as ids, group_array(latest_value_str) as latest_value_strs, map_cast(ids, latest_value_strs) as id_value_strs, id_value_strs['a'] as id_value_a, to_float(id_value_a) from (select id, latest(value_str) as latest_value_str from t_float_map group by id) limit 2"},
                    {"client":"python", "query_type": "table", "wait":1,"depends_on":"801", "query":"insert into t_float_map (id, value_str) values ('a', '100.1') ('b', '200.1') ('c', '300.1')"}   
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["0", "['b', 'c', 'a']", "['200.1', '300.1', '100.1']", "{'b': '200.1', 'c': '300.1', 'a': '100.1'}", "100.1", 100.1],
                ["1", "['b', 'c', 'a']", "['200.1', '300.1', '100.1']", "{'b': '200.1', 'c': '300.1', 'a': '100.1'}", "100.1", 100.1]
                
                ]}
            ]
        },
        {
            "id": 9,
            "tags": ["func", "bug", "todo"],
            "name": "to_float on filed out of map with emit version as view",
            "description": "create a table t_float_map with low_cardinality type and ingest, query, but of proton-python-driver",
            "steps":[
                {"statements": [
                    {"client":"python", "query_type": "table", "query":"drop stream if exists t_float_map"},
                    {"client":"python", "query_type": "table","wait":1, "query":"create stream t_float_map (id string, value_str string)"},
                    {"client":"python", "query_type": "table", "wait":1, "query":"create view if not exists emit_version_view as select emit_version(), group_array(id) as ids, group_array(latest_value_str) as latest_value_strs, map_cast(ids, latest_value_strs) as id_value_strs, id_value_strs['a'] as id_value_a, to_float(id_value_a) from (select id, latest(value_str) as latest_value_str from t_float_map group by id)"},
                    {"client":"python", "query_type": "stream","wait":1, "query_id": "801", "query_end_timer": 3, "query":"select * from emit_version_view limit 2"},
                    {"client":"python", "query_type": "table", "wait":1,"depends_on":"801", "query":"insert into t_float_map (id, value_str) values ('a', '100.1') ('b', '200.1') ('c', '300.1')"}   
                    ]}
            ],

            "expected_results": [{"query_id":"801", "expected_results":[
                ["0", "['b', 'c', 'a']", "['200.1', '300.1', '100.1']", "{'b': '200.1', 'c': '300.1', 'a': '100.1'}", "100.1", 100.1],
                ["1", "['b', 'c', 'a']", "['200.1', '300.1', '100.1']", "{'b': '200.1', 'c': '300.1', 'a': '100.1'}", "100.1", 100.1]
                ]}
            ]
        }                                                                                                                                                                 
    ]
}


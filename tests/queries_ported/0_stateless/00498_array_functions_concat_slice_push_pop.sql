select 'const args';
select 'concat';
select array_concat(empty_array_uint8());
select array_concat(empty_array_uint8(), empty_array_uint8());
select array_concat(empty_array_uint8(), empty_array_uint8(), empty_array_uint8());
select array_concat([Null], empty_array_uint8());
select array_concat([Null], empty_array_uint8(), [1]);
select array_concat([1, 2], [-1, -2], [0.3, 0.7], [Null]);
select array_concat(Null, empty_array_uint8());
select array_concat([1], [-1], Null);
select array_concat([1, 2], [3, 4]);
select array_concat([1], [2, 3, 4]);
select array_concat(empty_array_uint8(), empty_array_uint8());
SELECT array_concat(['abc'], ['def', 'gh', 'qwe']);
SELECT array_concat([1, NULL, 2], [3, NULL, 4]);
select array_concat([1, Null, 2], [3, 4]);

select 'slice';
select array_slice(Null, 1, 2);
select array_slice([1, 2, 3, 4, 5, 6], Null, Null);
select array_slice([1, 2, 3, 4, 5, 6], 2, Null);
select array_slice([1, 2, 3, 4, 5, 6], Null, 4);
select array_slice([1, 2, 3, 4, 5, 6], Null, -2);
select array_slice([1, 2, 3, 4, 5, 6], -3, Null);
select array_slice([1, 2, 3, 4, 5, 6], 2, 3);
select array_slice([1, 2, 3, 4, 5, 6], 2, -2);
select array_slice([1, 2, 3, 4, 5, 6], -4, 2);
select array_slice([1, 2, 3, 4, 5, 6], -4, -2);
select array_slice([1, 2, 3, 4, 5, 6], 2, 0);
select array_slice([1, 2, 3, 4, 5, 6], -10, 15);
select array_slice([1, 2, 3, 4, 5, 6], -15, 10);
select array_slice([1, 2, 3, 4, 5, 6], -15, 9);
select array_slice([1, 2, 3, 4, 5, 6], 10, 0);
select array_slice([1, 2, 3, 4, 5, 6], 10, -1);
select array_slice([1, 2, 3, 4, 5, 6], 10, 1);
select array_slice([1, 2, Null, 4, 5, 6], 2, 4);
select array_slice(['a', 'b', 'c', 'd', 'e'], 2, 3);
select array_slice([Null, 'b', Null, 'd', 'e'], 2, 3);
select array_slice([], materialize(NULL), NULL), 1 from numbers(2);

select 'push back';
select array_push_back(Null, 1);
select array_push_back([1], 1);
select array_push_back([Null], 1);
select array_push_back([0.5, 0.7], 1);
select array_push_back([1], -1);
select array_push_back(['a', 'b'], 'cd');
select array_push_back(empty_array_uint8(), 1);
select array_push_back(empty_array_uint8(), -1);

select 'push front';
select array_push_front(Null, 1);
select array_push_front([1], 1);
select array_push_front([Null], 1);
select array_push_front([0.5, 0.7], 1);
select array_push_front([1], -1);
select array_push_front(['a', 'b'], 'cd');
select array_push_front(empty_array_uint8(), 1);
select array_push_front(empty_array_uint8(), -1);

select 'pop back';
select array_pop_back(Null);
select array_pop_back(empty_array_uint8());
select array_pop_back([1]);
select array_pop_back([1, 2, 3]);
select array_pop_back([0.1, 0.2, 0.3]);
select array_pop_back(['a', 'b', 'c']);

select 'pop front';
select array_pop_front(Null);
select array_pop_front(empty_array_uint8());
select array_pop_front([1]);
select array_pop_front([1, 2, 3]);
select array_pop_front([0.1, 0.2, 0.3]);
select array_pop_front(['a', 'b', 'c']);

SET query_mode = 'table';
SET asterisk_include_reserved_columns=false;

DROP STREAM if exists array_functions;
select '';
select 'table';
create stream array_functions (arr1 array(int8), arr2 array(int8), o int8, no nullable(int8), l int8, nl nullable(int8)) ;
insert into array_functions(arr1, arr2, o, no, l, nl) values ([], [], 1, Null, 1, Null), ([], [1], 1, Null, 1, Null), ([1, 2, 3, 4, 5], [6, 7], 2, Null, 1, Null), ([1, 2, 3, 4, 5, 6, 7], [8], 2, 2, 3, 3), ([1, 2, 3, 4, 5, 6, 7], [], 2, Null, -3, -3), ([1, 2, 3, 4, 5, 6, 7], [], 2, Null, -3, Null), ([1, 2, 3, 4, 5, 6, 7], [], -5, -5, 4, 4), ([1, 2, 3, 4, 5, 6, 7], [], -5, -5, -3, -3);

SELECT sleep(3);

select * from array_functions;
select 'concat arr1, arr2';
select array_concat(arr1, arr2), arr1, arr2 from array_functions;
select 'concat arr1, arr2, arr1';
select array_concat(arr1, arr2, arr1), arr1, arr2 from array_functions;

select 'array_slice(arr1, o, l)';
select arr1, o, l, array_slice(arr1, o, l) from array_functions;
select 'array_slice(arr1, no, nl)';
select arr1, no, nl, array_slice(arr1, no, nl) from array_functions;
select 'array_slice(arr1, 2, l)';
select arr1, 2, l, array_slice(arr1, 2, l) from array_functions;
select 'array_slice(arr1, o, 2)';
select arr1, o, 2, array_slice(arr1, o, 2) from array_functions;
select 'array_slice(arr1, 2, nl)';
select arr1, 2, nl, array_slice(arr1, 2, nl) from array_functions;
select 'array_slice(arr1, no, 2)';
select arr1, no, 2, array_slice(arr1, no, 2) from array_functions;
select 'array_slice(arr1, -4, l)';
select arr1, 2, l, array_slice(arr1, -4, l) from array_functions;
select 'array_slice(arr1, o, -2)';
select arr1, o, 2, array_slice(arr1, o, -2) from array_functions;
select 'array_slice(arr1, -4, nl)';
select arr1, 2, nl, array_slice(arr1, -4, nl) from array_functions;
select 'array_slice(arr1, no, -2)';
select arr1, no, 2, array_slice(arr1, no, -2) from array_functions;
select 'array_slice(arr1, 2, 4)';
select arr1, 2, 4, array_slice(arr1, 2, 4) from array_functions;
select 'array_slice(arr1, 2, -4)';
select arr1, 2, 4, array_slice(arr1, 2, -4) from array_functions;
select 'array_slice(arr1, -4, 2)';
select arr1, 2, 4, array_slice(arr1, -4, 2) from array_functions;
select 'array_slice(arr1, -4, -1)';
select arr1, 2, 4, array_slice(arr1, -4, -1) from array_functions;

select 'array_push_front(arr1, 1)';
select arr1, array_push_front(arr1, 1) from array_functions;
select 'array_push_front(arr1, 0.1)';
select arr1, array_push_front(arr1, 0.1) from array_functions;
select 'array_push_front(arr1, l)';
select arr1, array_push_front(arr1, l) from array_functions;
select 'array_push_front(arr1, nl)';
select arr1, array_push_front(arr1, nl) from array_functions;
select 'array_push_front([1, 2, 3], l)';
select array_push_front([1, 2, 3], l) from array_functions;
select 'array_push_front([1, 2, 3], nl)' from array_functions;
select array_push_front([1, 2, 3], nl) from array_functions;

select 'array_push_back(arr1, 1)';
select arr1, array_push_back(arr1, 1) from array_functions;
select 'array_push_back(arr1, 0.1)';
select arr1, array_push_back(arr1, 0.1) from array_functions;
select 'array_push_back(arr1, l)';
select arr1, array_push_back(arr1, l) from array_functions;
select 'array_push_back(arr1, nl)';
select arr1, array_push_back(arr1, nl) from array_functions;
select 'array_push_back([1, 2, 3], l)';
select array_push_back([1, 2, 3], l) from array_functions;
select 'array_push_back([1, 2, 3], nl)';
select array_push_back([1, 2, 3], nl) from array_functions;

select 'array_pop_front(arr1)';
select arr1, array_pop_front(arr1) from array_functions;
select 'array_pop_back(arr1)';
select arr1, array_pop_back(arr1) from array_functions;


DROP STREAM if exists array_functions;
select '';
select 'table';
create stream array_functions (arr1 array(nullable(int8)), arr2 array(nullable(float32)), o int8, no nullable(int8), l int8, nl nullable(int8)) ;
insert into array_functions(arr1, arr2, o, no, l, nl) values ([], [], 1, Null, 1, Null), ([], [1, Null], 1, Null, 1, Null), ([1, 2, 3, 4, 5], [6, Null], 2, Null, 1, Null), ([1, Null, 3, 4, Null, 6, 7], [8], 2, 2, 3, 3),([1, 2, 3, Null, 5, 6, 7], [Null, 1], 2, Null, -3, -3),([1, 2, 3, 4, 5, Null, 7], [1, Null], 2, Null, -3, Null), ([1, 2, 3, 4, 5, 6, 7], [1, 2], -5, -5, 4, 4),([1, Null, 3, Null, 5, 6, 7], [], -5, -5, -3, -3);
SELECT sleep(3);
select * from array_functions;
select 'concat arr1, arr2';
select array_concat(arr1, arr2), arr1, arr2 from array_functions;
select 'concat arr1, arr2, arr1';
select array_concat(arr1, arr2, arr1), arr1, arr2 from array_functions;

select 'array_slice(arr1, o, l)';
select arr1, o, l, array_slice(arr1, o, l) from array_functions;
select 'array_slice(arr1, no, nl)';
select arr1, no, nl, array_slice(arr1, no, nl) from array_functions;
select 'array_slice(arr1, 2, l)';
select arr1, 2, l, array_slice(arr1, 2, l) from array_functions;
select 'array_slice(arr1, o, 2)';
select arr1, o, 2, array_slice(arr1, o, 2) from array_functions;
select 'array_slice(arr1, 2, nl)';
select arr1, 2, nl, array_slice(arr1, 2, nl) from array_functions;
select 'array_slice(arr1, no, 2)';
select arr1, no, 2, array_slice(arr1, no, 2) from array_functions;
select 'array_slice(arr1, -4, l)';
select arr1, 2, l, array_slice(arr1, -4, l) from array_functions;
select 'array_slice(arr1, o, -2)';
select arr1, o, 2, array_slice(arr1, o, -2) from array_functions;
select 'array_slice(arr1, -4, nl)';
select arr1, 2, nl, array_slice(arr1, -4, nl) from array_functions;
select 'array_slice(arr1, no, -2)';
select arr1, no, 2, array_slice(arr1, no, -2) from array_functions;
select 'array_slice(arr1, 2, 4)';
select arr1, 2, 4, array_slice(arr1, 2, 4) from array_functions;
select 'array_slice(arr1, 2, -4)';
select arr1, 2, 4, array_slice(arr1, 2, -4) from array_functions;
select 'array_slice(arr1, -4, 2)';
select arr1, 2, 4, array_slice(arr1, -4, 2) from array_functions;
select 'array_slice(arr1, -4, -1)';
select arr1, 2, 4, array_slice(arr1, -4, -1) from array_functions;

select 'array_push_front(arr1, 1)';
select arr1, array_push_front(arr1, 1) from array_functions;
select 'array_push_front(arr1, 0.1)';
select arr1, array_push_front(arr1, 0.1) from array_functions;
select 'array_push_front(arr1, l)';
select arr1, array_push_front(arr1, l) from array_functions;
select 'array_push_front(arr1, nl)';
select arr1, array_push_front(arr1, nl) from array_functions;
select 'array_push_front([1, 2, 3], l)';
select array_push_front([1, 2, 3], l) from array_functions;
select 'array_push_front([1, 2, 3], nl)' from array_functions;
select array_push_front([1, 2, 3], nl) from array_functions;

select 'array_push_back(arr1, 1)';
select arr1, array_push_back(arr1, 1) from array_functions;
select 'array_push_back(arr1, 0.1)';
select arr1, array_push_back(arr1, 0.1) from array_functions;
select 'array_push_back(arr1, l)';
select arr1, array_push_back(arr1, l) from array_functions;
select 'array_push_back(arr1, nl)';
select arr1, array_push_back(arr1, nl) from array_functions;
select 'array_push_back([1, 2, 3], l)';
select array_push_back([1, 2, 3], l) from array_functions;
select 'array_push_back([1, 2, 3], nl)';
select array_push_back([1, 2, 3], nl) from array_functions;

select 'array_pop_front(arr1)';
select arr1, array_pop_front(arr1) from array_functions;
select 'array_pop_back(arr1)';
select arr1, array_pop_back(arr1) from array_functions;


DROP STREAM if exists array_functions;
select '';
select 'table';
create stream array_functions (arr1 array(nullable(int8)), arr2 array(uint8), o int8, no nullable(int8), l int8, nl nullable(int8)) ;
insert into array_functions(arr1, arr2, o, no, l, nl) values ([], [], 1, Null, 1, Null), ([], [1, 2], 1, Null, 1, Null), ([1, 2, 3, 4, 5], [6, 7], 2, Null, 1, Null), ([1, Null,3,4, Null, 6, 7], [8], 2, 2, 3, 3),([1, 2, 3, Null, 5, 6, 7], [0, 1], 2, Null, -3, -3),([1, 2, 3, 4, 5, Null, 7], [1, 2], 2, Null, -3, Null),([1, 2, 3,4, 5, 6, 7], [1, 2], -5, -5, 4, 4),([1, Null, 3, Null, 5, 6, 7], [], -5, -5, -3, -3);
select sleep(3);
select * from array_functions;
select 'concat arr1, arr2';
select array_concat(arr1, arr2), arr1, arr2 from array_functions;
select 'concat arr1, arr2, arr1';
select array_concat(arr1, arr2, arr1), arr1, arr2 from array_functions;


select * from array_functions;
select 'concat arr1, arr2';
select array_concat(arr1, arr2), arr1, arr2 from array_functions;
select 'concat arr1, arr2, arr1';
select array_concat(arr1, arr2, arr1), arr1, arr2 from array_functions;

select 'array_slice(arr1, o, l)';
select arr1, o, l, array_slice(arr1, o, l) from array_functions;
select 'array_slice(arr1, no, nl)';
select arr1, no, nl, array_slice(arr1, no, nl) from array_functions;
select 'array_slice(arr1, 2, l)';
select arr1, 2, l, array_slice(arr1, 2, l) from array_functions;
select 'array_slice(arr1, o, 2)';
select arr1, o, 2, array_slice(arr1, o, 2) from array_functions;
select 'array_slice(arr1, 2, nl)';
select arr1, 2, nl, array_slice(arr1, 2, nl) from array_functions;
select 'array_slice(arr1, no, 2)';
select arr1, no, 2, array_slice(arr1, no, 2) from array_functions;
select 'array_slice(arr1, -4, l)';
select arr1, 2, l, array_slice(arr1, -4, l) from array_functions;
select 'array_slice(arr1, o, -2)';
select arr1, o, 2, array_slice(arr1, o, -2) from array_functions;
select 'array_slice(arr1, -4, nl)';
select arr1, 2, nl, array_slice(arr1, -4, nl) from array_functions;
select 'array_slice(arr1, no, -2)';
select arr1, no, 2, array_slice(arr1, no, -2) from array_functions;
select 'array_slice(arr1, 2, 4)';
select arr1, 2, 4, array_slice(arr1, 2, 4) from array_functions;
select 'array_slice(arr1, 2, -4)';
select arr1, 2, 4, array_slice(arr1, 2, -4) from array_functions;
select 'array_slice(arr1, -4, 2)';
select arr1, 2, 4, array_slice(arr1, -4, 2) from array_functions;
select 'array_slice(arr1, -4, -1)';
select arr1, 2, 4, array_slice(arr1, -4, -1) from array_functions;

select 'array_push_front(arr1, 1)';
select arr1, array_push_front(arr1, 1) from array_functions;
select 'array_push_front(arr1, 0.1)';
select arr1, array_push_front(arr1, 0.1) from array_functions;
select 'array_push_front(arr1, l)';
select arr1, array_push_front(arr1, l) from array_functions;
select 'array_push_front(arr1, nl)';
select arr1, array_push_front(arr1, nl) from array_functions;
select 'array_push_front([1, 2, 3], l)';
select array_push_front([1, 2, 3], l) from array_functions;
select 'array_push_front([1, 2, 3], nl)' from array_functions;
select array_push_front([1, 2, 3], nl) from array_functions;

select 'array_push_back(arr1, 1)';
select arr1, array_push_back(arr1, 1) from array_functions;
select 'array_push_back(arr1, 0.1)';
select arr1, array_push_back(arr1, 0.1) from array_functions;
select 'array_push_back(arr1, l)';
select arr1, array_push_back(arr1, l) from array_functions;
select 'array_push_back(arr1, nl)';
select arr1, array_push_back(arr1, nl) from array_functions;
select 'array_push_back([1, 2, 3], l)';
select array_push_back([1, 2, 3], l) from array_functions;
select 'array_push_back([1, 2, 3], nl)';
select array_push_back([1, 2, 3], nl) from array_functions;

select 'array_pop_front(arr1)';
select arr1, array_pop_front(arr1) from array_functions;
select 'array_pop_back(arr1)';
select arr1, array_pop_back(arr1) from array_functions;

DROP STREAM if exists array_functions;
select '';
select 'table';
create stream array_functions (arr1 array(nullable(string)), arr2 array(string), val string, val2 nullable(string), o int8, no nullable(int8), l int8, nl nullable(int8)) ;
insert into array_functions(arr1, arr2, val, val2, o, no, l, nl) values ([], [], '', Null, 1, Null, 1, Null), ([], ['1', '2'], 'a', 'b', 1, Null, 1, Null), (['1', '2', '3', '4', '5'], ['6','7'], 'a', Null, 2, Null, 1, Null), (['1', Null, '3', '4', Null, '6', '7'], ['8'], 'a', 'b', 2, 2, 3, 3),(['1', '2', '3', Null, '5', '6', '7'], ['0','1'], 'a', Null, 2, Null, -3, -3),(['1', '2', '3', '4', '5', Null, '7'], ['1', '2'], 'a', 'b', 2, Null, -3, Null),(['1', '2', '3', '4', '5', '6', '7'],['1', '2'], 'a', Null, -5, -5, 4, 4),(['1', Null, '3', Null, '5', '6', '7'], [], 'a', 'b', -5, -5, -3, -3);
SELECT sleep(3);

select * from array_functions;
select 'concat arr1, arr2';
select array_concat(arr1, arr2), arr1, arr2 from array_functions;
select 'concat arr1, arr2, arr1';
select array_concat(arr1, arr2, arr1), arr1, arr2 from array_functions;

select 'array_slice(arr1, o, l)';
select arr1, o, l, array_slice(arr1, o, l) from array_functions;
select 'array_slice(arr1, no, nl)';
select arr1, no, nl, array_slice(arr1, no, nl) from array_functions;
select 'array_slice(arr1, 2, l)';
select arr1, 2, l, array_slice(arr1, 2, l) from array_functions;
select 'array_slice(arr1, o, 2)';
select arr1, o, 2, array_slice(arr1, o, 2) from array_functions;
select 'array_slice(arr1, 2, nl)';
select arr1, 2, nl, array_slice(arr1, 2, nl) from array_functions;
select 'array_slice(arr1, no, 2)';
select arr1, no, 2, array_slice(arr1, no, 2) from array_functions;
select 'array_slice(arr1, -4, l)';
select arr1, 2, l, array_slice(arr1, -4, l) from array_functions;
select 'array_slice(arr1, o, -2)';
select arr1, o, 2, array_slice(arr1, o, -2) from array_functions;
select 'array_slice(arr1, -4, nl)';
select arr1, 2, nl, array_slice(arr1, -4, nl) from array_functions;
select 'array_slice(arr1, no, -2)';
select arr1, no, 2, array_slice(arr1, no, -2) from array_functions;
select 'array_slice(arr1, 2, 4)';
select arr1, 2, 4, array_slice(arr1, 2, 4) from array_functions;
select 'array_slice(arr1, 2, -4)';
select arr1, 2, 4, array_slice(arr1, 2, -4) from array_functions;
select 'array_slice(arr1, -4, 2)';
select arr1, 2, 4, array_slice(arr1, -4, 2) from array_functions;
select 'array_slice(arr1, -4, -1)';
select arr1, 2, 4, array_slice(arr1, -4, -1) from array_functions;

select 'array_push_front(arr1, 1)';
select arr1, array_push_front(arr1, '1') from array_functions;
select 'array_push_front(arr1, val)';
select arr1, array_push_front(arr1, val) from array_functions;
select 'array_push_front(arr1, val2)';
select arr1, array_push_front(arr1, val2) from array_functions;
select 'array_push_front([a, b, c], val)';
select array_push_front(['a', 'b', 'c'], val) from array_functions;
select 'array_push_front([a, b, c], val2)';
select array_push_front(['a', 'b', 'c'], val2) from array_functions;

select 'array_push_back(arr1, 1)';
select arr1, array_push_back(arr1, '1') from array_functions;
select 'array_push_back(arr1, val)';
select arr1, array_push_back(arr1, val) from array_functions;
select 'array_push_back(arr1, val2)';
select arr1, array_push_back(arr1, val2) from array_functions;
select 'array_push_back([a, b, c], val)';
select array_push_back(['a', 'b', 'c'], val) from array_functions;
select 'array_push_back([a, b, c], val2)';
select array_push_back(['a', 'b', 'c'], val2) from array_functions;

select 'array_pop_front(arr1)';
select arr1, array_pop_front(arr1) from array_functions;
select 'array_pop_back(arr1)';
select arr1, array_pop_back(arr1) from array_functions;

DROP STREAM if exists array_functions;

DROP STREAM IF EXISTS github_events;

CREATE STREAM github_events
(
    `file_time` DateTime,
    `event_type` enum8('CommitCommentEvent' = 1, 'CreateEvent' = 2, 'DeleteEvent' = 3, 'ForkEvent' = 4, 'GollumEvent' = 5, 'IssueCommentEvent' = 6, 'IssuesEvent' = 7, 'MemberEvent' = 8, 'PublicEvent' = 9, 'PullRequestEvent' = 10, 'PullRequestReviewCommentEvent' = 11, 'PushEvent' = 12, 'ReleaseEvent' = 13, 'SponsorshipEvent' = 14, 'WatchEvent' = 15, 'GistEvent' = 16, 'FollowEvent' = 17, 'DownloadEvent' = 18, 'PullRequestReviewEvent' = 19, 'ForkApplyEvent' = 20, 'Event' = 21, 'TeamAddEvent' = 22),
    `actor_login` low_cardinality(string),
    `repo_name` low_cardinality(string),
    `created_at` DateTime,
    `updated_at` DateTime,
    `action` enum8('none' = 0, 'created' = 1, 'added' = 2, 'edited' = 3, 'deleted' = 4, 'opened' = 5, 'closed' = 6, 'reopened' = 7, 'assigned' = 8, 'unassigned' = 9, 'labeled' = 10, 'unlabeled' = 11, 'review_requested' = 12, 'review_request_removed' = 13, 'synchronize' = 14, 'started' = 15, 'published' = 16, 'update' = 17, 'create' = 18, 'fork' = 19, 'merged' = 20),
    `comment_id` uint64,
    `body` string,
    `path` string,
    `position` int32,
    `line` int32,
    `ref` low_cardinality(string),
    `ref_type` enum8('none' = 0, 'branch' = 1, 'tag' = 2, 'repository' = 3, 'unknown' = 4),
    `creator_user_login` low_cardinality(string),
    `number` uint32,
    `title` string,
    `labels` array(low_cardinality(string)),
    `state` enum8('none' = 0, 'open' = 1, 'closed' = 2),
    `locked` uint8,
    `assignee` low_cardinality(string),
    `assignees` array(low_cardinality(string)),
    `comments` uint32,
    `author_association` enum8('NONE' = 0, 'CONTRIBUTOR' = 1, 'OWNER' = 2, 'COLLABORATOR' = 3, 'MEMBER' = 4, 'MANNEQUIN' = 5),
    `closed_at` DateTime,
    `merged_at` DateTime,
    `merge_commit_sha` string,
    `requested_reviewers` array(low_cardinality(string)),
    `requested_teams` array(low_cardinality(string)),
    `head_ref` low_cardinality(string),
    `head_sha` string,
    `base_ref` low_cardinality(string),
    `base_sha` string,
    `merged` uint8,
    `mergeable` uint8,
    `rebaseable` uint8,
    `mergeable_state` enum8('unknown' = 0, 'dirty' = 1, 'clean' = 2, 'unstable' = 3, 'draft' = 4),
    `merged_by` low_cardinality(string),
    `review_comments` uint32,
    `maintainer_can_modify` uint8,
    `commits` uint32,
    `additions` uint32,
    `deletions` uint32,
    `changed_files` uint32,
    `diff_hunk` string,
    `original_position` uint32,
    `commit_id` string,
    `original_commit_id` string,
    `push_size` uint32,
    `push_distinct_size` uint32,
    `member_login` low_cardinality(string),
    `release_tag_name` string,
    `release_name` string,
    `review_state` enum8('none' = 0, 'approved' = 1, 'changes_requested' = 2, 'commented' = 3, 'dismissed' = 4, 'pending' = 5)
)
ENGINE = MergeTree ORDER BY (event_type, repo_name, created_at);

with top_repos as ( select repo_name from github_events where event_type = 'WatchEvent' and to_date(created_at) = today() - 1 group by repo_name order by count() desc limit 100 union distinct select repo_name from github_events where event_type = 'WatchEvent' and toMonday(created_at) = toMonday(today() - interval 1 week) group by repo_name order by count() desc limit 100 union distinct select repo_name from github_events where event_type = 'WatchEvent' and to_start_of_month(created_at) = tostartofmonth(today()) - interval 1 month group by repo_name order by count() desc limit 100 union distinct select repo_name from github_events where event_type = 'watchevent' and toyear(created_at) = toyear(today()) - 1 group by repo_name order by count() desc limit 100 ), last_day as ( select repo_name, count() as count_last_day, rownumberinallblocks() + 1 as position_last_day from github_events where repo_name in (select repo_name from top_repos) and to_date(created_at) = today() - 1 group by repo_name order by count_last_day desc ), last_week as ( select repo_name, count() as count_last_week, rownumberinallblocks() + 1 as position_last_week from github_events where repo_name in (select repo_name from top_repos) and tomonday(created_at) = tomonday(today()) - interval 1 week group by repo_name order by count_last_week desc ), last_month as ( select repo_name, count() as count_last_month, rownumberinallblocks() + 1 as position_last_month from github_events where repo_name in (select repo_name from top_repos) and tostartofmonth(created_at) = tostartofmonth(today()) - interval 1 month group by repo_name order by count_last_month desc ) select d.repo_name, columns(count) from last_day d join last_week w on d.repo_name = w.repo_name join last_month m on d.repo_name = m.repo_name format tabseparatedwithnamesandtypes; -- { servererror 47 }

DROP STREAM github_events;

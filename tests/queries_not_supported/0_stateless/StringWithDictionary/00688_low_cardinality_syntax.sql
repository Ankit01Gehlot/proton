set allow_suspicious_low_cardinality_types = 1;
SET query_mode = 'table';
drop stream if exists lc_str_0;
drop stream if exists lc_str_1;
drop stream if exists lc_null_str_0;
drop stream if exists lc_null_str_1;
drop stream if exists lc_int8_0;
drop stream if exists lc_int8_1;
drop stream if exists lc_null_int8_0;
drop stream if exists lc_null_int8_1;
drop stream if exists lc_fix_str_0;
drop stream if exists lc_fix_str_1;
drop stream if exists lc_null_fix_str_0;
drop stream if exists lc_null_fix_str_1;

create stream lc_str_0 (str low_cardinality(string)) engine = Memory;
create stream lc_str_1 (str StringWithDictionary) engine = Memory;
create stream lc_null_str_0 (str low_cardinality(nullable(string))) engine = Memory;
create stream lc_null_str_1 (str NullableWithDictionary(string)) engine = Memory;
create stream lc_int8_0 (val low_cardinality(int8)) engine = Memory;
create stream lc_int8_1 (val Int8WithDictionary) engine = Memory;
create stream lc_null_int8_0 (val low_cardinality(nullable(int8))) engine = Memory;
create stream lc_null_int8_1 (val NullableWithDictionary(int8)) engine = Memory;
create stream lc_fix_str_0 (str low_cardinality(fixed_string(2))) engine = Memory;
create stream lc_fix_str_1 (str FixedStringWithDictionary(2)) engine = Memory;
create stream lc_null_fix_str_0 (str low_cardinality(nullable(fixed_string(2)))) engine = Memory;
create stream lc_null_fix_str_1 (str NullableWithDictionary(fixed_string(2))) engine = Memory;

insert into lc_str_0 select 'a';
insert into lc_str_1 select 'a';
insert into lc_null_str_0 select 'a';
insert into lc_null_str_1 select 'a';
insert into lc_int8_0 select 1;
insert into lc_int8_1 select 1;
insert into lc_null_int8_0 select 1;
insert into lc_null_int8_1 select 1;
insert into lc_fix_str_0 select 'ab';
insert into lc_fix_str_1 select 'ab';
insert into lc_null_fix_str_0 select 'ab';
insert into lc_null_fix_str_1 select 'ab';

select str from lc_str_0;
select str from lc_str_1;
select str from lc_null_str_0;
select str from lc_null_str_1;
select val from lc_int8_0;
select val from lc_int8_1;
select val from lc_null_int8_0;
select val from lc_null_int8_1;
select str from lc_fix_str_0;
select str from lc_fix_str_1;
select str from lc_null_fix_str_0;
select str from lc_null_fix_str_1;

drop stream if exists lc_str_0;
drop stream if exists lc_str_1;
drop stream if exists lc_null_str_0;
drop stream if exists lc_null_str_1;
drop stream if exists lc_int8_0;
drop stream if exists lc_int8_1;
drop stream if exists lc_null_int8_0;
drop stream if exists lc_null_int8_1;
drop stream if exists lc_fix_str_0;
drop stream if exists lc_fix_str_1;
drop stream if exists lc_null_fix_str_0;
drop stream if exists lc_null_fix_str_1;

select '-';
SELECT toLowCardinality('a') AS s, to_type_name(s), to_type_name(length(s)) from system.one;
select toLowCardinality('a') as val group by val;
select (toLowCardinality('a') as val) || 'b' group by val;
select toLowCardinality(z) as val from (select array_join(['c', 'd']) as z) group by val;
select (toLowCardinality(z) as val) || 'b'  from (select array_join(['c', 'd']) as z) group by val;

select '-';
drop stream if exists lc_str_uuid;
create stream lc_str_uuid(str1 string, str2 low_cardinality(string), str3 StringWithDictionary) ENGINE=Memory;
select to_uuid(str1), to_uuid(str2), to_uuid(str3) from lc_str_uuid;
select to_uuid(str1, '', NULL), to_uuid(str2, '', NULL), to_uuid(str3, '', NULL) from lc_str_uuid;
insert into lc_str_uuid values ('61f0c404-5cb3-11e7-907b-a6006ad3dba0', '61f0c404-5cb3-11e7-907b-a6006ad3dba0', '61f0c404-5cb3-11e7-907b-a6006ad3dba0');
select to_uuid(str1), to_uuid(str2), to_uuid(str3) from lc_str_uuid;
select to_uuid(str1, '', NULL), to_uuid(str2, '', NULL), to_uuid(str3, '', NULL) from lc_str_uuid;
drop stream if exists lc_str_uuid;

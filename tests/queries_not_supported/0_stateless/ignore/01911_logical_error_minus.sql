-- This test case is almost completely generated by fuzzer.
-- It appeared to trigger assertion.

DROP STREAM IF EXISTS codecTest;

create stream codecTest (
    key      uint64,
    name     string,
    ref_valueF64 float64,
    ref_valueF32 Float32,
    valueF64 float64  CODEC(Gorilla),
    valueF32 Float32  CODEC(Gorilla)
) Engine = MergeTree ORDER BY key;

INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)
    SELECT number AS n, 'e()', e() AS v, v, v, v FROM system.numbers LIMIT 1, 100;

INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)
    SELECT number AS n, 'log2(n)', log2(n) AS v, v, v, v FROM system.numbers LIMIT 101, 100;

INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)
    SELECT number AS n, 'n*sqrt(n)', n*sqrt(n) AS v, v, v, v FROM system.numbers LIMIT 201, 100;

INSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)
    SELECT number AS n, 'sin(n*n*n)*n', sin(n * n * n * n* n) AS v, v, v, v FROM system.numbers LIMIT 301, 100;

SELECT IF(-2, NULL, 0.00009999999747378752), IF(1048577, 1048576, NULL), c1.key, IF(1, NULL, NULL), c2.key FROM codecTest AS c1 , codecTest AS c2 WHERE ignore(IF(257, -2, NULL), array_join([65537]), IF(3, 1024, 9223372036854775807)) AND IF(NULL, 256, NULL) AND (IF(NULL, '1048576', NULL) = (c1.key - NULL)) LIMIT 65535;

SELECT c1.key, c1.name, c1.ref_valueF64, c1.valueF64, c1.ref_valueF64 - c1.valueF64 AS dF64, '', c2.key, c2.ref_valueF64 FROM codecTest AS c1 , codecTest AS c2 WHERE (dF64 != 3) AND c1.valueF64 AND (c2.key = (c1.key - 1048576)) LIMIT 0;


DROP STREAM codecTest;

create stream codecTest (
    key      uint64,
    ref_valueU64 uint64,
    ref_valueU32 uint32,
    ref_valueU16 uint16,
    ref_valueU8  uint8,
    ref_valueI64 int64,
    ref_valueI32 int32,
    ref_valueI16 int16,
    ref_valueI8  int8,
    ref_valueDT  datetime,
    ref_valueD   date,
    valueU64 uint64   CODEC(DoubleDelta),
    valueU32 uint32   CODEC(DoubleDelta),
    valueU16 uint16   CODEC(DoubleDelta),
    valueU8  uint8    CODEC(DoubleDelta),
    valueI64 int64    CODEC(DoubleDelta),
    valueI32 int32    CODEC(DoubleDelta),
    valueI16 int16    CODEC(DoubleDelta),
    valueI8  int8     CODEC(DoubleDelta),
    valueDT  datetime CODEC(DoubleDelta),
    valueD   date     CODEC(DoubleDelta)
) Engine = MergeTree ORDER BY key SETTINGS min_bytes_for_wide_part = 0;

INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueI64, valueI64)
    VALUES (1, 18446744073709551615, 18446744073709551615, 9223372036854775807, 9223372036854775807), (2, 0, 0, -9223372036854775808, -9223372036854775808), (3, 18446744073709551615, 18446744073709551615, 9223372036854775807, 9223372036854775807);

INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueU32, valueU32, ref_valueU16, valueU16, ref_valueU8, valueU8, ref_valueI64, valueI64, ref_valueI32, valueI32, ref_valueI16, valueI16, ref_valueI8, valueI8, ref_valueDT, valueDT, ref_valueD, valueD)
    SELECT number as n, n * n * n as v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, to_datetime(v), to_datetime(v), to_date(v), to_date(v)
    FROM system.numbers LIMIT 101, 1000;

INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueU32, valueU32, ref_valueU16, valueU16, ref_valueU8, valueU8, ref_valueI64, valueI64, ref_valueI32, valueI32, ref_valueI16, valueI16, ref_valueI8, valueI8, ref_valueDT, valueDT, ref_valueD, valueD)
    SELECT number as n, n as v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, to_datetime(v), to_datetime(v), to_date(v), to_date(v)
    FROM system.numbers LIMIT 2001, 1000;

INSERT INTO codecTest (key, ref_valueU64, valueU64, ref_valueU32, valueU32, ref_valueU16, valueU16, ref_valueU8, valueU8, ref_valueI64, valueI64, ref_valueI32, valueI32, ref_valueI16, valueI16, ref_valueI8, valueI8, ref_valueDT, valueDT, ref_valueD, valueD)
    SELECT number as n, n + (rand64() - 9223372036854775807)/1000 as v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, v, to_datetime(v), to_datetime(v), to_date(v), to_date(v)
    FROM system.numbers LIMIT 3001, 1000;

SELECT IF(-2, NULL, 0.00009999999747378752), IF(1048577, 1048576, NULL), c1.key, IF(1, NULL, NULL), c2.key FROM codecTest AS c1 , codecTest AS c2 WHERE ignore(IF(257, -2, NULL), array_join([65537]), IF(3, 1024, 9223372036854775807)) AND IF(NULL, 256, NULL) AND (IF(NULL, '1048576', NULL) = (c1.key - NULL)) LIMIT 65535;


DROP STREAM codecTest;

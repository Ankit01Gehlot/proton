name: WeeklyTest

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  schedule:
    # build at 00:30(UTC) on every Sunday
    - cron:  '30 0 * * SUN'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      command: |
            cd $GITHUB_WORKSPACE
            git config user.name "proton-robot"
            git config user.email "proton_robot@timeplus.io"
            aws s3 cp --no-progress s3://tp-internal/proton/cache_$SANITIZER.tar.gz .
            mkdir $GITHUB_WORKSPACE/ccache
            tar -zxf ./cache_$SANITIZER.tar.gz -C $GITHUB_WORKSPACE/ccache
            rm cache_$SANITIZER.tar.gz
            echo "max_size = 100.0G" > $GITHUB_WORKSPACE/ccache/ccache.conf
            ./docker/packager/packager --package-type binary --docker-image-version clang-14 --sanitizer $SANITIZER --proton-build  --cache ccache --ccache_dir $GITHUB_WORKSPACE/ccache --output-dir $GITHUB_WORKSPACE/output
            docker run --name static-server -p 8080:80 -v $GITHUB_WORKSPACE/output:/usr/share/nginx/html:ro -d nginx
            cd $GITHUB_WORKSPACE/docker/server
            docker build . --network host --build-arg single_binary_location_url=http://localhost:8080/proton -t timeplus/proton:testing-$SANITIZER-$GITHUB_SHA
            docker push timeplus/proton:testing-$SANITIZER-$GITHUB_SHA
            cd $GITHUB_WORKSPACE/tests/stream
            export PROTON_VERSION=testing-$SANITIZER-$GITHUB_SHA
            env
            pip3 install -r helpers/requirements.txt
            python3 ci_runner.py --debug --settings=redp,nativelog
            tar -zcf ./cache_$SANITIZER.tar.gz -C $GITHUB_WORKSPACE/ccache .
            aws s3 cp --no-progress ./cache_$SANITIZER.tar.gz s3://tp-internal/proton/
            cat $GITHUB_WORKSPACE/tests/stream/.status
            cat $GITHUB_WORKSPACE/tests/stream/.status | grep nativelog:ExitCode.OK | grep redp:ExitCode.OK
    steps:
      - name: display command
        run: |
          echo 'command: ${{ steps.set_command.outputs.command }}'
  test_address:
    needs: prepare
    uses: timeplus-io/proton/.github/workflows/run_command.yml@develop
    with:
      ec2-instance-type: c5.4xlarge
      ec2-image-id: ami-045a86d6d301ab637
      submodules: 'true'
      sanitizer: "address"
      tag: 'sanitizer'
      command: |
        ${{ needs.prepare.outputs.command }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  test_thread:
    needs: prepare
    uses: timeplus-io/proton/.github/workflows/run_command.yml@develop
    with:
      ec2-instance-type: c5.4xlarge
      ec2-image-id: ami-045a86d6d301ab637
      submodules: 'true'
      sanitizer: "thread"
      tag: 'sanitizer'
      command: |
        ${{ needs.prepare.outputs.command }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  test_memory:
    needs: prepare
    uses: timeplus-io/proton/.github/workflows/run_command.yml@develop
    with:
      ec2-instance-type: c5.4xlarge
      ec2-image-id: ami-045a86d6d301ab637
      submodules: 'true'
      sanitizer: "memory"
      tag: 'sanitizer'
      command: |
        ${{ needs.prepare.outputs.command }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  test_undefined:
    needs: prepare
    uses: timeplus-io/proton/.github/workflows/run_command.yml@develop
    with:
      ec2-instance-type: c5.4xlarge
      ec2-image-id: ami-045a86d6d301ab637
      submodules: 'true'
      sanitizer: "undefined"
      tag: 'sanitizer'
      command: |
        ${{ needs.prepare.outputs.command }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
